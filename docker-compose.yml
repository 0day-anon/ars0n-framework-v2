version: '3'

services:
  api:
    build: ./server
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/ars0n
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: ars0n
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - temp_data:/tmp
    restart: unless-stopped

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ars0n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  client:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  assetfinder:
    build: ./docker/assetfinder
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  sublist3r:
    build: ./docker/sublist3r
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  ctl:
    build: ./docker/ctl
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  subfinder:
    build: ./docker/subfinder
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  shuffledns:
    build: ./docker/shuffledns
    volumes:
      - ./docker/shuffledns/wordlists:/app/wordlists
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  cewl:
    build: ./docker/cewl
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  gospider:
    build:
      context: .
      dockerfile: docker/gospider/Dockerfile
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  subdomainizer:
    build:
      context: .
      dockerfile: docker/subdomainizer/Dockerfile
    depends_on:
      - api
    entrypoint: ["sleep", "infinity"]
    restart: "no"

  nuclei:
    build: ./docker/nuclei
    depends_on:
      - api
    volumes:
      - temp_data:/tmp
    entrypoint: ["sleep", "infinity"]
    shm_size: '2g'
    restart: "no"

volumes:
  postgres_data:
  temp_data:
